tArgs = { ... }

local config = {
    ["modem_side"] = "back",
    ["key"] = "1wi7i9h15p4rk73",
    ["channel_update"] = "__update__",
    ["channel_reset"] = "__reset__"
}

function printUsage()
    error("Usage: redloader <reset/update> <id> [fs]")
end

function getFiles(dir)
    local files = { }
    if(fs.isDir(dir)) then
        for _, file in pairs(fs.list(dir)) do
            for _, fname in pairs(getFiles(fs.combine(dir, file))) do
                table.insert(files, fname)
            end
        end
    else
        table.insert(files, dir)
    end
    return files
end

function relatePath(base, path)
    path = shell.resolve(path)
    base = shell.resolve(base)
    return path:gsub(base, "", 1)
end

function init(side)
    rednet.open(side)
end

function reset(id)
    local data = {
        ["key"] = config.key,
        ["reset"] = true
    }
    rednet.send(id, textutils.serialize(data), config.channel_reset)
end

function upload(id, dir)
    local files = { }
    for _, fname in pairs(getFiles(dir)) do
        local flhndl = fs.open(fname, "r")
        if(fs.isDir(dir)) then
            fname = relatePath(dir, fname)
        else
            fname = relatePath(fs.getDir(fname), fname)
        end
        files[fname] = flhndl.readAll()
        flhndl.close()
    end
    local data = {
        ["key"] = config.key,
        ["data"] = files
    }
    rednet.send(id, textutils.serialize(data), config.channel_update)
end

if(#tArgs > 0) then
    if(#tArgs < 2) then
        printUsage()
    end

    local op = tArgs[1]
    local id = tonumber(tArgs[2])
    if(type(id) ~= "number") then
        printUsage()
    end

    init(config.modem_side)

    local baseObj = {
        ["key"] = config.key
    }

    if(op == "reset") then
        reset(id)
    elseif(op == "update") then
        if(#tArgs < 3) then
            printUsage()
        end
        local dir = tArgs[3]
        if(not fs.exists(dir)) then
            printUsage()
        end
        upload(id, dir)
    end
end
